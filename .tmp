/**
 * Fetches a list of PIDs from Solr.
 */
function drush_islandora_datastream_crud_fetch_pids() {
  if (!module_exists('islandora_solr')) {
    drush_set_error('SOLR_SEARCH_NOT_AVAILABLE',
      dt('Sorry, Islandora Solr Search not enabled.'));
  }

  // If applicable, check that the specified collection object exists and
  // is accessible; if it's not, exit with an error. Also confirm that the
  // object has the expected content model.
  if (drush_get_option('collection')) {
    if (!islandora_object_load(drush_get_option('collection'))) {
      drush_set_error('COLLECTION_NOT_FOUND',
        dt('The specified collection object (!collection) is not found or is not accessible.',
        array('!collection' => drush_get_option('collection'))));
    }
    else {
      $collection_object = islandora_object_load(drush_get_option('collection'));
      $collection_cmodels = $collection_object->models;
      if ($collection_cmodels[0] != 'islandora:collectionCModel') {
        drush_set_error('OBJECT_IS_NOT_COLLECTION',
          dt('The specified collection object (!collection) does not have a content model of islandora:collectionCModel.',
          array('!collection' => drush_get_option('collection'))));
      }
    }
  }

  // Build the Solr query.
  $query = '';
  $query_parts = array();
  if (drush_get_option('collection')) {
    $query_parts[] = 'RELS_EXT_isMemberOfCollection_uri_t' . ':"' . drush_get_option('collection') . '"';
  }
  if (drush_get_option('content_model')) {
    $query_parts[] = 'RELS_EXT_hasModel_uri_t' . ':' . '"info:fedora/' . drush_get_option('content_model') . '"';
  }

  if (count($query_parts) > 1) {
    $query = implode(' AND ', $query_parts);
  }
  else {
    $query = $query_parts[0];
  }

  if (drush_get_option('namespace')) {
    // Other options are present.
    if (strlen($query)) {
      $query .= ' AND PID:' . drush_get_option('namespace') . '\:*';
    }
    else {
      // Only option is --namespace.
      $query = 'PID:' . drush_get_option('namespace') . '\:*';
    }
  }

  if (drush_get_option('with_dsid')) {
    // Other options are present.
    if (strlen($query)) {
      $query .= ' AND fedora_datastreams_mt:' . drush_get_option('with_dsid');
    }
    else {
      // Only option is --with_dsid.
      $query = 'fedora_datastreams_mt:' . drush_get_option('with_dsid');
    }
  }

  if (drush_get_option('without_dsid')) {
    // Other options are present.
    if (strlen($query)) {
      $query .= ' AND -fedora_datastreams_mt:' . drush_get_option('without_dsid');
    }
    else {
      // Only option is --without_dsid.
      $query = '-fedora_datastreams_mt:' . drush_get_option('without_dsid');
    }
  }

  // --query overrides all other options.
  if (drush_get_option('solr_query')) {
    $query = drush_get_option('solr_query');
  }

  // Get the PIDs from the Solr query.
  module_load_include('inc', 'islandora_datastream_crud', 'includes/utilities');
  $pids = islandora_datastream_crud_query_solr($query);

  if (!count($pids) || !$pids) {
    drush_set_error('NO_PIDS_FOUND',
      dt('Sorry, no PIDS were found.'));
  }
  else {
    foreach ($pids as $pid) {
      if (drush_get_option('pid_file')) {
        file_put_contents(drush_get_option('pid_file'), $pid . PHP_EOL, FILE_APPEND);
      }
      else {
        drush_print($pid);
      }
    }
    if (drush_get_option('pid_file')) {
      drush_log(dt("PIDS written to file !pid_file", array('!pid_file' => drush_get_option('pid_file'))), 'ok');
    }
  }
}
